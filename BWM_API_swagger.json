{
    "folders": [
        {
            "description": "Folder for bw_allocations", 
            "collection_name": "BWM API", 
            "collection": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "id": "13ccef0a-23d6-4a43-a76b-c0c808e01141", 
            "collection_id": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "order": [
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d070", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b441", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0702", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0713", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0724", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0735", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d076", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b447", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0708", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0719", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07210", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07311", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0712", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b4413", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07014", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07115", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07216", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07317", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0718", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b4419", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07020", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07121", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07222", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07323", 
                "633c9dc1-9a17-4cdf-8693-f9a460fdc17724", 
                "633c9dc1-9a17-4cdf-8693-f9a460fdc17725", 
                "633c9dc1-9a17-4cdf-8693-f9a460fdc17726", 
                "633c9dc1-9a17-4cdf-8693-f9a460fdc17727", 
                "e4500b98-0f59-4ace-9bcf-602a1c66859528", 
                "e4500b98-0f59-4ace-9bcf-602a1c66859529", 
                "e4500b98-0f59-4ace-9bcf-602a1c66859530", 
                "e4500b98-0f59-4ace-9bcf-602a1c66859531", 
                "e4500b98-0f59-4ace-9bcf-602a1c66859532", 
                "9c6d8d96-3934-4ebc-984f-9b759494c28d33", 
                "9c6d8d96-3934-4ebc-984f-9b759494c28d34", 
                "9c6d8d96-3934-4ebc-984f-9b759494c28d35", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af36", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af37", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af38", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af39", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af40", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0700", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b4411", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07022", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07133", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07244", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07355", 
                "e4500b98-0f59-4ace-9bcf-602a1c668595286", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af367", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d0708", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b4419", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d070210", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d071311", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d072412", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d073513", 
                "e4500b98-0f59-4ace-9bcf-602a1c6685952814", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af3615", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d07016", 
                "26914570-75f5-42e7-8bdc-2a71d28c3b44117", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d070218", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d071319", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d072420", 
                "4bd0874b-0a59-4ac9-acbe-ef661ae52d073521", 
                "e4500b98-0f59-4ace-9bcf-602a1c6685952822", 
                "dc884cb9-bbe6-4686-a520-7bc3b60777af3623"
            ], 
            "name": "bw_allocations"
        }
    ], 
    "description": "The ETSI MEC ISG MEC015 Bandwidth Management API described using OpenAPI", 
    "timestamp": 1413302258635, 
    "id": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
    "synced": false, 
    "requests": [
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/1?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d070", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/2?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b441", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/3?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0702", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/4?query=/bwm/v1/bw_allocations?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0713", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/5?query=/bwm/v1/bw_allocations?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0724", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/6?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0735", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}&app_names={{app_name}}&session_ids={{session_id}}", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/7?query=/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}?app_names={{app_name}}?session_ids={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d076", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/8?query=/bwm/v1/bw_allocations/:allocationIds',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b447", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/9?query=/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0708", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_names={{app_name}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/10?query=/bwm/v1/bw_allocations?app_names={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0719", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_ids={{session_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/11?query=/bwm/v1/bw_allocations?session_ids={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07210", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/12?query=/bwm/v1/bw_allocationss',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07311", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/13?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0712", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/14?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b4413", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/15?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07014", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/16?query=/bwm/v1/bw_allocations?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07115", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/17?query=/bwm/v1/bw_allocations?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07216", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/18?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07317", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/19?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0718", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/20?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b4419", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/21?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07020", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_name={{app_name}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/22?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07121", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?session_id={{session_id}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/23?query=/bwm/v1/bw_allocationssnoitacolla_wb?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07222", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/24?query=/bwm/v1/bw_allocationssnoitacolla_wb',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07323", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/bwm/v1/bw_allocationss&header=bwInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData[\"bwInfo.allocationDirection\"]);", 
                            "    pm.environment.set(\"appInsId\",currentData[\"bwInfo.appInsId\"]);", 
                            "    pm.environment.set(\"requestType\",currentData[\"bwInfo.requestType\"]);", 
                            "    pm.environment.set(\"seconds\",currentData[\"bwInfo.timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"bwInfo.timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData[\"bwInfo.fixedBWPriority\"]);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"bwInfo.sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"bwInfo.sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"bwInfo.sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"bwInfo.sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"bwInfo.sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData[\"bwInfo.fixedAllocation\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "633c9dc1-9a17-4cdf-8693-f9a460fdc17724", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/bwm/v1/bw_allocations&header=bwInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData[\"bwInfo.allocationDirection\"]);", 
                            "    pm.environment.set(\"appInsId\",currentData[\"bwInfo.appInsId\"]);", 
                            "    pm.environment.set(\"requestType\",currentData[\"bwInfo.requestType\"]);", 
                            "    pm.environment.set(\"seconds\",currentData[\"bwInfo.timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"bwInfo.timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData[\"bwInfo.fixedBWPriority\"]);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"bwInfo.sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"bwInfo.sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"bwInfo.sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"bwInfo.sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"bwInfo.sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData[\"bwInfo.fixedAllocation\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "633c9dc1-9a17-4cdf-8693-f9a460fdc17725", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/bwm/v1/bw_allocations&header=bwInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData[\"bwInfo.allocationDirection\"]);", 
                            "    pm.environment.set(\"appInsId\",currentData[\"bwInfo.appInsId\"]);", 
                            "    pm.environment.set(\"requestType\",currentData[\"bwInfo.requestType\"]);", 
                            "    pm.environment.set(\"seconds\",currentData[\"bwInfo.timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"bwInfo.timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData[\"bwInfo.fixedBWPriority\"]);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"bwInfo.sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"bwInfo.sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"bwInfo.sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"bwInfo.sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"bwInfo.sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData[\"bwInfo.fixedAllocation\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "633c9dc1-9a17-4cdf-8693-f9a460fdc17726", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/bwm/v1/bw_allocationssnoitacolla_wb&header=bwInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData[\"bwInfo.allocationDirection\"]);", 
                            "    pm.environment.set(\"appInsId\",currentData[\"bwInfo.appInsId\"]);", 
                            "    pm.environment.set(\"requestType\",currentData[\"bwInfo.requestType\"]);", 
                            "    pm.environment.set(\"seconds\",currentData[\"bwInfo.timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"bwInfo.timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData[\"bwInfo.fixedBWPriority\"]);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"bwInfo.sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"bwInfo.sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"bwInfo.sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"bwInfo.sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"bwInfo.sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData[\"bwInfo.fixedAllocation\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "633c9dc1-9a17-4cdf-8693-f9a460fdc17727", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/29?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c66859528", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/30?query=/bwm/v1/bw_allocations/:allocationIds',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c66859529", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/31?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c66859530", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/32?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c66859531", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/33?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c66859532", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/34?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9c6d8d96-3934-4ebc-984f-9b759494c28d33", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/35?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9c6d8d96-3934-4ebc-984f-9b759494c28d34", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/36?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9c6d8d96-3934-4ebc-984f-9b759494c28d35", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/37?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af36", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/38?query=/bwm/v1/bw_allocations/:allocationIds',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af37", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/39?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af38", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/40?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af39", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/41?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af40", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0700", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/42?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b4411", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/43?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07022", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/44?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07133", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/45?query=/bwm/v1/bw_allocations?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07244", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/46?query=/bwm/v1/bw_allocations?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07355", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/47?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c668595286", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/48?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af367", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/49?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d0708", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/50?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b4419", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/51?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d070210", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/52?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d071311", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/53?query=/bwm/v1/bw_allocations?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d072412", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/54?query=/bwm/v1/bw_allocations?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d073513", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/55?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c6685952814", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/56?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af3615", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/57?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d07016", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/58?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}?app_name={{app_name}}?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "26914570-75f5-42e7-8bdc-2a71d28c3b44117", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/59?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d070218", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/60?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d071319", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/61?query=/bwm/v1/bw_allocations?app_name={{app_name}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d072420", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/62?query=/bwm/v1/bw_allocations?session_id={{session_id}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "4bd0874b-0a59-4ac9-acbe-ef661ae52d073521", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/63?query=/bwm/v1/bw_allocations',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1552977236826, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "e4500b98-0f59-4ace-9bcf-602a1c6685952822", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/64?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData.bwInfo.timeStamp.seconds);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData.bwInfo.timeStamp.nanoSeconds);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "b51fa0c1-53c3-4e01-af86-a7c9126349c9", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "dc884cb9-bbe6-4686-a520-7bc3b60777af3623", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/65?query=/bwm/v1/bw_allocations/:allocationId',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.bwInfo.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.bwInfo.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.bwInfo.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.bwInfo.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData.bwInfo.sessionFilter[0].SourcePort);", 
                            "    pm.environment.set(\"DstAddress\",currentData.bwInfo.sessionFilter[0].DstAddress);", 
                            "    pm.environment.set(\"DstPort\",currentData.bwInfo.sessionFilter[0].DstPort);", 
                            "    pm.environment.set(\"Protocol\",currentData.bwInfo.sessionFilter[0].Protocol);", 
                            "    pm.environment.set(\"SourceIp\",currentData.bwInfo.sessionFilter[0].SourceIp);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.bwInfo.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1552977236827, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }
    ], 
    "order": [], 
    "name": "BWM API"
}
{
    "folders": [
        {
            "description": "Folder for bw_allocations", 
            "collection_name": "BWM API", 
            "collection": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "id": "06c15809-8ac4-4255-b2ba-6110c83e5989", 
            "collection_id": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "order": [
                "d6bee05a-db1c-4058-a596-2860f7d72ae60", 
                "f5401376-568d-4bd6-a98b-68212880632c1", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae602", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae613", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae624", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae635", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae66", 
                "f5401376-568d-4bd6-a98b-68212880632c7", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae608", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae619", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6210", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6311", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae612", 
                "f5401376-568d-4bd6-a98b-68212880632c13", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6014", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6115", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6216", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6317", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae618", 
                "f5401376-568d-4bd6-a98b-68212880632c19", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6020", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6121", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6222", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6323", 
                "a670e651-4e3f-4702-b173-5c3a2fbd7d5124", 
                "a670e651-4e3f-4702-b173-5c3a2fbd7d5125", 
                "a670e651-4e3f-4702-b173-5c3a2fbd7d5126", 
                "a670e651-4e3f-4702-b173-5c3a2fbd7d5127", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d28", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d29", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d30", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d31", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d32", 
                "9e6f7d59-3d10-40eb-9093-7508f139cbc433", 
                "9e6f7d59-3d10-40eb-9093-7508f139cbc434", 
                "9e6f7d59-3d10-40eb-9093-7508f139cbc435", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a936", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a937", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a938", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a939", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a940", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae600", 
                "f5401376-568d-4bd6-a98b-68212880632c11", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6022", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6133", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6244", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6355", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d286", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a9367", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae608", 
                "f5401376-568d-4bd6-a98b-68212880632c19", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae60210", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae61311", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae62412", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae63513", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d2814", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a93615", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae6016", 
                "f5401376-568d-4bd6-a98b-68212880632c117", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae60218", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae61319", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae62420", 
                "d6bee05a-db1c-4058-a596-2860f7d72ae63521", 
                "c5a72e04-82ab-4d37-9aa9-20ce478d383d2822", 
                "b9e0139c-6df6-4e2d-956f-46956c50c3a93623"
            ], 
            "name": "bw_allocations"
        }
    ], 
    "description": "The ETSI MEC ISG MEC015 Bandwidth Management API described using OpenAPI", 
    "timestamp": 1413302258635, 
    "id": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
    "synced": false, 
    "requests": [
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/1',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae60", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/2',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "f5401376-568d-4bd6-a98b-68212880632c1", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/3',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae602", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/4',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae613", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/5',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae624", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/6',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae635", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}&app_names={{app_name}}&session_ids={{session_id}}", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/7',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae66", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/8',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "f5401376-568d-4bd6-a98b-68212880632c7", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/9',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae608", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/10',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_names={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae619", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/11',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_ids={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6210", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/12',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6311", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/13',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae612", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/14',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "f5401376-568d-4bd6-a98b-68212880632c13", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/15',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6014", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/16',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6115", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/17',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6216", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/18',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6317", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/19',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae618", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/20',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "f5401376-568d-4bd6-a98b-68212880632c19", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/21',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6020", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/22',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6121", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/23',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6222", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/24',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6323", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/25',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a670e651-4e3f-4702-b173-5c3a2fbd7d5124", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/26',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a670e651-4e3f-4702-b173-5c3a2fbd7d5125", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/27',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a670e651-4e3f-4702-b173-5c3a2fbd7d5126", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772905, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/28',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a670e651-4e3f-4702-b173-5c3a2fbd7d5127", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/29',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d28", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/30',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d29", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/31',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d30", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/32',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d31", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/33',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d32", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/34',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9e6f7d59-3d10-40eb-9093-7508f139cbc433", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/35',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9e6f7d59-3d10-40eb-9093-7508f139cbc434", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/36',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9e6f7d59-3d10-40eb-9093-7508f139cbc435", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            ""
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/37',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a936", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/38',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a937", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/39',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a938", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/40',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a939", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/41',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a940", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/42',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae600", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/43',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "f5401376-568d-4bd6-a98b-68212880632c11", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/44',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6022", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/45',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6133", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/46',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6244", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/47',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6355", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/48',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d286", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/49',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a9367", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/50',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae608", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/51',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "f5401376-568d-4bd6-a98b-68212880632c19", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/52',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae60210", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/53',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae61311", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/54',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae62412", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/55',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae63513", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/56',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d2814", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/57',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a93615", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/58',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae6016", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/59',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "f5401376-568d-4bd6-a98b-68212880632c117", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/60',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae60218", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/61',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae61319", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/62',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae62420", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/63',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "d6bee05a-db1c-4058-a596-2860f7d72ae63521", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1542604772905, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/64',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c5a72e04-82ab-4d37-9aa9-20ce478d383d2822", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/65',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "4c5c4262-bc6a-4710-b2f6-195a78d942cb", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "b9e0139c-6df6-4e2d-956f-46956c50c3a93623", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1542604772906, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }
    ], 
    "order": [], 
    "name": "BWM API"
}
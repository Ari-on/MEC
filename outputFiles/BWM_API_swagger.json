{
    "folders": [
        {
            "description": "Folder for bw_allocations", 
            "collection_name": "BWM API", 
            "collection": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "id": "c31991a3-6788-45e9-9171-8fdfffd6709e", 
            "collection_id": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "order": [
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7720", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad71", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77202", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77213", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77224", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77235", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7726", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad77", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77208", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77219", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772210", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772311", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77212", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad713", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772014", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772115", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772216", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772317", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77218", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad719", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772020", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772121", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772222", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772323", 
                "3f529224-2636-4fa9-8182-b04c4053d32324", 
                "3f529224-2636-4fa9-8182-b04c4053d32325", 
                "3f529224-2636-4fa9-8182-b04c4053d32326", 
                "3f529224-2636-4fa9-8182-b04c4053d32327", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a28928", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a28929", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a28930", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a28931", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a28932", 
                "2124514d-229b-40c7-8e3f-75ba3d4ea0ec33", 
                "2124514d-229b-40c7-8e3f-75ba3d4ea0ec34", 
                "2124514d-229b-40c7-8e3f-75ba3d4ea0ec35", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd236", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd237", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd238", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd239", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd240", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77200", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad711", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772022", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772133", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772244", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772355", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a289286", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd2367", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c77208", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad719", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7720210", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7721311", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7722412", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7723513", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a2892814", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd23615", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c772016", 
                "a826a30d-0bc5-4185-b664-4aaf7eba0ad7117", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7720218", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7721319", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7722420", 
                "383a7d11-a0dd-4899-aeb5-3d7197e0c7723521", 
                "8b6b6110-466a-40bb-a665-2b7f84f1a2892822", 
                "c3311b5a-75c3-4e25-b159-5d1e51b71dd23623"
            ], 
            "name": "bw_allocations"
        }
    ], 
    "description": "The ETSI MEC ISG MEC015 Bandwidth Management API described using OpenAPI", 
    "timestamp": 1413302258635, 
    "id": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
    "synced": false, 
    "requests": [
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/1?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7720", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/2?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad71", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/3?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77202", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/4?query=/bwm/v1/bw_allocations?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77213", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/5?query=/bwm/v1/bw_allocations?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77224", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/6?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77235", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}&app_names={{app_name}}&session_ids={{session_id}}", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/7?query=/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}&app_names={{app_name}}&session_ids={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7726", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/8?query=/bwm/v1/bw_allocations/:allocationIds',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad77", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/9?query=/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_ids={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77208", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/10?query=/bwm/v1/bw_allocations?app_names={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_names={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77219", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/11?query=/bwm/v1/bw_allocations?session_ids={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_ids={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772210", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/12?query=/bwm/v1/bw_allocationss',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772311", 
            "name": "TC_400"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/13?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77212", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/14?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad713", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/15?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772014", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/16?query=/bwm/v1/bw_allocations?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772115", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/17?query=/bwm/v1/bw_allocations?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772216", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/18?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772317", 
            "name": "TC_403"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/19?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77218", 
            "description": "This method retrieves information about a list of bandwidthAllocation resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/20?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad719", 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/21?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_instance_id={{app_instance_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772020", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/22?query=/bwm/v1/bw_allocationssnoitacolla_wb?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?app_name={{app_name}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772121", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/23?query=/bwm/v1/bw_allocationssnoitacolla_wb?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb?session_id={{session_id}}", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772222", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/24?query=/bwm/v1/bw_allocationssnoitacolla_wb',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772323", 
            "name": "TC_404"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationss", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/25?query=/bwm/v1/bw_allocationss',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "3f529224-2636-4fa9-8182-b04c4053d32324", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/26?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "3f529224-2636-4fa9-8182-b04c4053d32325", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/27?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "3f529224-2636-4fa9-8182-b04c4053d32326", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/28?query=/bwm/v1/bw_allocationssnoitacolla_wb',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "3f529224-2636-4fa9-8182-b04c4053d32327", 
            "description": "This method is used to create a bandwidthAllocation resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/29?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a28928", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/30?query=/bwm/v1/bw_allocations/:allocationIds',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a28929", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/31?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a28930", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/32?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a28931", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/33?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a28932", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/34?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "2124514d-229b-40c7-8e3f-75ba3d4ea0ec33", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/35?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "2124514d-229b-40c7-8e3f-75ba3d4ea0ec34", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/36?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "2124514d-229b-40c7-8e3f-75ba3d4ea0ec35", 
            "description": "Remove a specific bandwidthAllocation resource. DELETE method is typically used in \"Unregister from Bandwidth Management Service\" procedure"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"bwInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedBWPriority\");", 
                            "    pm.expect(pm.response.text()).to.include(\"allocationDirection\");", 
                            "    pm.expect(pm.response.text()).to.include(\"appInsId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sessionFilter\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourcePort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DstPort\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Protocol\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SourceIp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"timeStamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"seconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"nanoSeconds\");", 
                            "    pm.expect(pm.response.text()).to.include(\"fixedAllocation\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json(),length > 0){", 
                            "        jsonData = pm.response.json(); \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedBWPriority']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['allocationDirection']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['appInsId']).to.not.be.a('number');", 
                            "        for (j = 0; j < jsonData[i]['bwInfo']['sessionFilter'].length; j++) {", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourcePort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstAddress']).to.not.be.a('number');", 
                            "        for (k = 0; k < jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'].length; k++) {", 
                            "            pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['DstPort'][k]).to.be.a('string');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['Protocol']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['sessionFilter'][j]['SourceIp']).to.not.be.a('number');", 
                            "        }", 
                            "        pm.expect(jsonData[i]['bwInfo']['requestType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['seconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['timeStamp']['nanoSeconds']).to.be.a('number');", 
                            "        pm.expect(jsonData[i]['bwInfo']['fixedAllocation']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/37?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd236", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationIds", 
            "name": "TC_400", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/38?query=/bwm/v1/bw_allocations/:allocationIds',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd237", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "name": "TC_412", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/39?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd238", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "name": "TC_403", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/40?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd239", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId", 
            "name": "TC_404", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/41?query=/bwm/v1/bw_allocationssnoitacolla_wb/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PATCH", 
            "preRequestScript": "", 
            "data": [], 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd240", 
            "description": "This method updates the information about a specific bandwidthAllocation resource. "
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/42?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77200", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/43?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad711", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/44?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772022", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/45?query=/bwm/v1/bw_allocations?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772133", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/46?query=/bwm/v1/bw_allocations?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772244", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/47?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772355", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/48?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a289286", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/49?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd2367", 
            "name": "TC_01 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/50?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c77208", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/51?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad719", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/52?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7720210", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/53?query=/bwm/v1/bw_allocations?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7721311", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/54?query=/bwm/v1/bw_allocations?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7722412", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/55?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7723513", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/56?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a2892814", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/57?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd23615", 
            "name": "TC_10 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/58?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}&app_name={{app_name}}&session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c772016", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/59?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "a826a30d-0bc5-4185-b664-4aaf7eba0ad7117", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/60?query=/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_instance_id\",currentData.app_instance_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_instance_id={{app_instance_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7720218", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/61?query=/bwm/v1/bw_allocations?app_name={{app_name}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"app_name\",currentData.app_name);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?app_name={{app_name}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7721319", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/62?query=/bwm/v1/bw_allocations?session_id={{session_id}}',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"session_id\",currentData.session_id);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations?session_id={{session_id}}", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7722420", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "params", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/63?query=/bwm/v1/bw_allocations',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method retrieves information about a list of bandwidthAllocation resources", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations", 
            "id": "383a7d11-a0dd-4899-aeb5-3d7197e0c7723521", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1545980781454, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "method": "GET", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/64?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"seconds\",currentData[\"timeStamp.seconds\"]);", 
                            "    pm.environment.set(\"nanoSeconds\",currentData[\"timeStamp.nanoSeconds\"]);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "8b6b6110-466a-40bb-a665-2b7f84f1a2892822", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"timeStamp\": {\n        \"seconds\": \"{{seconds}}\",\n        \"nanoSeconds\": \"{{nanoSeconds}}\"\n    },\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PUT", 
            "responses": []
        }, 
        {
            "dataMode": "raw", 
            "tests": "", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            "    url: 'localhost:8081/read_Excel/65?query=/bwm/v1/bw_allocations/:allocationId',", 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"allocationId\",currentData.allocationId);", 
                            "    pm.environment.set(\"allocationDirection\",currentData.allocationDirection);", 
                            "    pm.environment.set(\"appInsId\",currentData.appInsId);", 
                            "    pm.environment.set(\"requestType\",currentData.requestType);", 
                            "    pm.environment.set(\"fixedBWPriority\",currentData.fixedBWPriority);", 
                            "    pm.environment.set(\"SourcePort\",currentData[\"sessionFilter.SourcePort\"]);", 
                            "    pm.environment.set(\"DstAddress\",currentData[\"sessionFilter.DstAddress\"]);", 
                            "    pm.environment.set(\"DstPort\",currentData[\"sessionFilter.DstPort\"]);", 
                            "    pm.environment.set(\"Protocol\",currentData[\"sessionFilter.Protocol\"]);", 
                            "    pm.environment.set(\"SourceIp\",currentData[\"sessionFilter.SourceIp\"]);", 
                            "    pm.environment.set(\"fixedAllocation\",currentData.fixedAllocation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "description": "This method updates the information about a specific bandwidthAllocation resource. ", 
            "collectionId": "51caf59d-3a50-4c46-ab38-63914f6168a6", 
            "url": "{{scheme}}://{{host}}:{{port}}/bwm/v1/bw_allocations/:allocationId", 
            "id": "c3311b5a-75c3-4e25-b159-5d1e51b71dd23623", 
            "name": "TC_00 ", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"allocationDirection\": \"{{allocationDirection}}\",\n    \"appInsId\": \"{{appInsId}}\",\n    \"sessionFilter\": [\n        {\n            \"SourcePort\": [\n                \"{{SourcePort}}\"\n            ],\n            \"DstAddress\": \"{{DstAddress}}\",\n            \"DstPort\": [\n                \"{{DstPort}}\"\n            ],\n            \"Protocol\": \"{{Protocol}}\",\n            \"SourceIp\": \"{{SourceIp}}\"\n        }\n    ],\n    \"requestType\": \"{{requestType}}\",\n    \"fixedBWPriority\": \"{{fixedBWPriority}}\",\n    \"fixedAllocation\": \"{{fixedAllocation}}\"\n}", 
            "time": 1545980781455, 
            "synced": false, 
            "pathVariables": {
                "allocationId": "{{allocationId}}"
            }, 
            "preRequestScript": "", 
            "data": [], 
            "method": "PATCH", 
            "responses": []
        }
    ], 
    "order": [], 
    "name": "BWM API"
}